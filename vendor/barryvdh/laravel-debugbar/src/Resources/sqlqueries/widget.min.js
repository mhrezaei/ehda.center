(function(c){var b=PhpDebugBar.utils.makecsscls("phpdebugbar-widgets-");var a=PhpDebugBar.Widgets.LaravelSQLQueriesWidget=PhpDebugBar.Widget.extend({className:b("sqlqueries"),onFilterClick:function(e){c(e).toggleClass(b("excluded"));var d=[];this.$toolbar.find(b(".filter")+b(".excluded")).each(function(){d.push(this.rel)});this.$list.$el.find("li[connection="+c(e).attr("rel")+"]").toggle();this.set("exclude",d)},render:function(){this.$status=c("<div />").addClass(b("status")).appendTo(this.$el);this.$toolbar=c("<div></div>").addClass(b("toolbar")).appendTo(this.$el);var e=[],d=this;this.$list=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(f,i){if(i.type==="transaction"){c("<strong />").addClass(b("sql")).addClass(b("name")).text(i.sql).appendTo(f)}else{c("<code />").addClass(b("sql")).html(PhpDebugBar.Widgets.highlight(i.sql,"sql")).appendTo(f)}if(i.duration_str){c('<span title="Duration" />').addClass(b("duration")).text(i.duration_str).appendTo(f)}if(i.memory_str){c('<span title="Memory usage" />').addClass(b("memory")).text(i.memory_str).appendTo(f)}if(typeof(i.row_count)!="undefined"){c('<span title="Row count" />').addClass(b("row-count")).text(i.row_count).appendTo(f)}if(typeof(i.stmt_id)!="undefined"&&i.stmt_id){c('<span title="Prepared statement ID" />').addClass(b("stmt-id")).text(i.stmt_id).appendTo(f)}if(i.connection){c('<span title="Connection" />').addClass(b("database")).text(i.connection).appendTo(f);f.attr("connection",i.connection);if(c.inArray(i.connection,e)==-1){e.push(i.connection);c("<a />").addClass(b("filter")).text(i.connection).attr("rel",i.connection).on("click",function(){d.onFilterClick(this)}).appendTo(d.$toolbar);if(e.length>1){d.$toolbar.show();d.$list.$el.css("margin-bottom","20px")}}}if(typeof(i.is_success)!="undefined"&&!i.is_success){f.addClass(b("error"));f.append(c("<span />").addClass(b("error")).text("["+i.error_code+"] "+i.error_message))}var h=c('<table><tr><th colspan="2">Metadata</th></tr></table>').addClass(b("params")).appendTo(f);if(i.bindings&&i.bindings.length){h.append(function(){var n="thumb-tack";var k='<i class="phpdebugbar-fa phpdebugbar-fa-'+n+' phpdebugbar-text-muted"></i>';var p=c("<td />").addClass(b("name")).html("Bindings "+k);var m=c("<td />").addClass(b("value"));var j=c("<span />").addClass("phpdebugbar-text-muted");var l=0;var o=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(r,s){var q=j.clone().text(l+++".");r.append(q,"&nbsp;",s).removeClass(b("list-item")).addClass(b("table-list-item"))}});o.set("data",i.bindings);o.$el.removeClass(b("list")).addClass(b("table-list")).appendTo(m);return c("<tr />").append(p,m)})}if(i.hints&&i.hints.length){h.append(function(){var m="question-circle";var j='<i class="phpdebugbar-fa phpdebugbar-fa-'+m+' phpdebugbar-text-muted"></i>';var n=c("<td />").addClass(b("name")).html("Hints "+j);var l=c("<td />").addClass(b("value"));var k=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(o,p){o.append(p).removeClass(b("list-item")).addClass(b("table-list-item"))}});k.set("data",i.hints);k.$el.removeClass(b("list")).addClass(b("table-list")).appendTo(l);return c("<tr />").append(n,l)})}if(i.backtrace&&i.backtrace.length){h.append(function(){var m="list-ul";var k='<i class="phpdebugbar-fa phpdebugbar-fa-'+m+' phpdebugbar-text-muted"></i>';var o=c("<td />").addClass(b("name")).html("Backtrace "+k);var l=c("<td />").addClass(b("value"));var j=c("<span />").addClass("phpdebugbar-text-muted");var n=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(p,r){var q=[j.clone().text(r.index+"."),"&nbsp;"];if(r.namespace){q.push(r.namespace+"::")}q.push(r.name);q.push(j.clone().text(":"+r.line));p.append(q).removeClass(b("list-item")).addClass(b("table-list-item"))}});n.set("data",i.backtrace);n.$el.removeClass(b("list")).addClass(b("table-list")).appendTo(l);return c("<tr />").append(o,l)})}if(i.params&&!c.isEmptyObject(i.params)){for(var g in i.params){if(typeof i.params[g]!=="function"){h.append('<tr><td class="'+b("name")+'">'+g+'</td><td class="'+b("value")+'">'+i.params[g]+"</td></tr>")}}}f.css("cursor","pointer").click(function(){if(h.is(":visible")){h.hide()}else{h.show()}})}});this.$list.$el.appendTo(this.$el);this.bindAttr("data",function(j){this.$list.set("data",j.statements);this.$status.empty();var h;for(var l={},k=0,g=0;g<j.statements.length;g++){if(j.statements[g].type==="query"){h=j.statements[g].sql;if(j.statements[g].bindings&&j.statements[g].bindings.length){h+=JSON.stringify(j.statements[g].bindings)}l[h]=l[h]||{keys:[]};l[h].keys.push(g)}}for(h in l){if(l[h].keys.length>1){k+=l[h].keys.length;for(g=0;g<l[h].keys.length;g++){this.$list.$el.find("."+b("list-item")).eq(l[h].keys[g]).addClass(b("sql-duplicate")).addClass(b("sql-duplicate-"+k))}}}var f=c("<span />").text(j.nb_statements+" statements were executed").appendTo(this.$status);if(j.nb_failed_statements){f.append(", "+j.nb_failed_statements+" of which failed")}if(k){f.append(", "+k+" of which were duplicated");f.append(", "+(j.nb_statements-k)+" unique")}if(j.accumulated_duration_str){this.$status.append(c('<span title="Accumulated duration" />').addClass(b("duration")).text(j.accumulated_duration_str))}if(j.memory_usage_str){this.$status.append(c('<span title="Memory usage" />').addClass(b("memory")).text(j.memory_usage_str))}})}})})(PhpDebugBar.$);